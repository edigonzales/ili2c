name: Build and publish ili2c-python

on:
  push:
    paths:
      - "python/**"
      - ".github/workflows/python-package.yml"
  pull_request:
    paths:
      - "python/**"
      - ".github/workflows/python-package.yml"
  release:
    types: [published]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: python
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[test]
      - name: Run tests
        run: pytest

  build:
    needs: test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: python
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install build tooling
        run: |
          python -m pip install --upgrade pip
          pip install build
      - name: Build distributions
        run: python -m build
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ili2c-python-dist
          path: python/dist/*

  publish:
    needs: build
    #if: startsWith(github.ref, 'refs/tags/v')
    if: ${{ (github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && github.ref == 'refs/heads/master')) }}    
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: python
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: ili2c-python-dist
          path: python/dist
      # - name: Publish to PyPI
      #   env:
      #     TWINE_USERNAME: __token__
      #     TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install twine
      #     twine upload dist/*

      - name: Debug
        shell: bash
        run: |
          ls -la
          ls -la dist/
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          #password: ${{ secrets.PYPI_API_TOKEN }}
          password: ${{ secrets.PYPI_TEST_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          packages_dir: python/dist/
          verbose: true